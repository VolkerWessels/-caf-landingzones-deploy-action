name: 'CAF landing zone deployment'
description: 'VolkerWessels biased CAF landing zone deployment'
inputs:
  branch:
    description: 'The branch of the caf-terraform-landingzones repository'
    default: vw-combined
    required: false
  action:
    description: 'CAF terraform action to run. One of (validate, init, plan, apply, show or destroy)'
    required: true
  config_dir:
    description: 'A directory in `github.workspace` containing config (*.tfvar) files.'
    required: true
  environment:
    description: 'The environment variable used in Azure tags'
    required: true
  prefix:
    description: 'The prefix variable used in Azure naming'
    required: true
  default_prefix:
    description: 'Default prefix of the resource name'
    required: false
  landingzone:
    description: 'the segment (launchpad, solution or add-on) of a cloud environment to deploy'
    required: true
  level:
    description: 'Deploy level'
    required: true
  subscription_name:
    description: 'Name of the subscription the landingzone should be deployed in'
    required: false
  tags:
    description: 'Json string of tags to import'
    required: false
runs:
  using: "composite"
  steps:
    - run: |
        LZ_NAME=${{inputs.landingzone}};
        BASE_PATH=$(dirname ${{ inputs.config_dir }});
        echo "LANDINGZONE_NAME=${LZ_NAME////-}" >> $GITHUB_ENV;
        echo "GITHUB_ACTION_PATH=${GITHUB_ACTION_PATH}" >> $GITHUB_ENV;
        echo "TFVARS_PATH=${{ inputs.config_dir }}" >> $GITHUB_ENV;
        echo "BASE_PATH=${BASE_PATH}" >> $GITHUB_ENV;
        echo "TF_DATA_DIR=${GITHUB_WORKSPACE}" >> $GITHUB_ENV;
        echo "TF_PLUGIN_CACHE_DIR=${GITHUB_WORKSPACE}/plugin-cache" >> $GITHUB_ENV;
      shell: bash
    - uses: VolkerWessels/conditional-composite-action@v1 # Workaround until possibility to use 'if:' option for action steps of composite actions
      with:
        if: ${{ inputs.action == 'apply' }}
        step: |
          uses: actions/download-artifact@v2
          with:
            name: terraform-${{ env.LANDINGZONE_NAME }}-plan
            path: ${{ env.BASE_PATH }}/
    - name: Terraform Cache
      id: terraform-cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ env.TF_PLUGIN_CACHE_DIR }}
        key: ${{ runner.os }}-terraform-${{ inputs.prefix }}-${{ inputs.environment }}-${ GITHUB_RUN_ID}
        restore-keys: |
          ${{ runner.os }}-terraform-${{ inputs.prefix }}-${{ inputs.environment }}
    - name: Install landingzones
      run: make landingzones
      shell: bash
      working-directory: ${{ env.GITHUB_ACTION_PATH }}
      env:
        TF_LZ_GIT: https://github.com/VolkerWessels/caf-terraform-landingzones.git
        TF_LZ_BRANCH: ${{ inputs.branch }}
    - name: Azure login with service principal
      run: make login
      env:
        ARM_SUBSCRIPTION_NAME: ${{ inputs.subscription_name }}
      working-directory: ${{ env.GITHUB_ACTION_PATH }}
      shell: bash
    - name: Create tags file with jq and move it to the solution folder
      run: make tags TAGS=$( echo -n "${{ inputs.tags }}" | base64 -w 0) SOLUTION=${{ inputs.landingzone }} LEVEL=${{ inputs.level }}
      working-directory: ${{ env.GITHUB_ACTION_PATH }}
      shell: bash
    - name: Run ${{ inputs.action }}
      id: solution-deployment
      run: make ${{ inputs.action }} SOLUTION=${{ inputs.landingzone }} LEVEL=${{ inputs.level }} | tee -i ${{ inputs.landingzone }}-${{ inputs.action }}.log
      working-directory: ${{ env.GITHUB_ACTION_PATH }}
      env:
        PREFIX: ${{ inputs.prefix }}
        DEFAULT_PREFIX: ${{ inputs.default_prefix }}
        ENVIRONMENT: ${{ inputs.environment }}
      shell: bash
    - name: Parse plan output
      id: plan
      uses: VolkerWessels/conditional-composite-action@v1 # Workaround until possibility to use 'if:' option for action steps of composite actions
      with:
        if: ${{ inputs.action == 'plan'}}
        step: |
          run: |
            sed -n '/Terraform will perform the following actions:/,$p' ${{ inputs.landingzone }}-${{ inputs.action }}.log
    - name: Update Pull Request
      uses: VolkerWessels/conditional-composite-action@v1 # Workaround until possibility to use 'if:' option for action steps of composite actions
      with:
        if: ${{ inputs.action == 'plan'}}
        step: |
          uses: actions/github-script@v6
          env: 
            plan: PLAN: "${{ steps.plan.outputs.stdout }}"
          with:
            script: |
              const output = `#### Name: \`${{ inputs.landingzone }}\`
              #### Terraform Plan ðŸ“–\`${{ steps.solution-deployment.outcome }}\`
              
              <details><summary>Show Plan</summary>
              
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
              
              </details>
              
              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
    - name: Logout service principal
      run: make logout
      working-directory: ${{ env.GITHUB_ACTION_PATH }}
      shell: bash
    - name: Store tfplan
      uses: VolkerWessels/conditional-composite-action@v1 # Workaround until possibility to use 'if:' option for action steps of composite actions
      with:
        if: ${{ inputs.action == 'plan'}}
        step: |
          uses: actions/upload-artifact@v2
          with:
            name: terraform-${{ env.LANDINGZONE_NAME }}-plan
            path: |
              ${{ env.BASE_PATH }}/*.tfplan
            if-no-files-found: error
    
